This folder contains three other files, CS.x (interface), client.c and
proc.c (server called procedures).

After copying these files, edit CS.x and change the program number
to 0x3yyyyyyy, choosing yyyyyyy so that there is no conflict if your
classmate runs this program on the same host.

proc.c contains services called by client. Read the code to 
determine the services.  client.c contains client program which
makes service calls. Note that each service call is like a 
procedure call. The request goes to a hidden server, which calls
these procedures.

To experiment, open two connections with any two UNIX hosts. Use
one for client and other for server.  run 'make all' on one 
connection; it should list and executed the following commands.

rpcgen -N CS.x
gcc -o CLIENT client.c CS_clnt.c CS_xdr.c -lnsl
gcc -o SERVER proc.c CS_svc.c CS_xdr.c -lnsl

run "SERVER". SERVER first registers its services with the
"rpcbind" server and then waits for client request.
Run on the client host, "rpcinfo -p server_host |grep program_number"
and you should see that your server has registered its program accepting
services using either protocols - TCP or UDP.

Run the following  on client host
CLIENT server-host

Do "ps -ef|grep your-login-id" to find process-id of SERVER.
Kill the server. It is important that you kill your server before 
logging off.

Run 'make clean' to delete all unnecessary files generated by
rpcgen or compiler.
----------------------------------

Debugging client server programs is harder than debugging a standalone
program, because of several reasons. Instead of debugging two
files client.c and proc.c simultaneously using debuggers from 
two windows, One option is to merge the two programs into one.
In this folder, both.c is a merging of these two files. To create
this, I did the following
(a) I appended client.c to proc.c; 'cat proc.c cliet.c >both.c'
(b) Deleted include of the second copy of header files.
(c) Commented clnt_create() portion.
(d) Removed 'cl' from the call statement to remote procedure calls.
(e) Ran it; client makes local procedures now.
(f) Debug your code using gdb.
(g) Debug the original client.c and proc.c like any program.
(h) After all errors are removed, copy the interior of rpc in the
proc.c.

